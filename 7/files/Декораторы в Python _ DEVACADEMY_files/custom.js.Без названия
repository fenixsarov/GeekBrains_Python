(function ($, window, document, undefined) {
    'use strict';
    var pluginName = "devacademy",
        defaults = {
            sliderFx: 'crossfade',		// Slider effect. Can be 'slide', 'fade', 'crossfade'
            sliderInterval: 6000,		// Interval
            speedAnimation: 600,        // Default speed of the animation
            tooltipPosition: 'top'            // Team extend height
        },
        $win = $(window),
        $doc = $(document),
        $html = $('html'),
        onMobile = false,
        scrT;

    // The plugin constructor
    function Plugin(element, options) {
        var that = this;
        that.element = $(element);
        that.options = $.extend({}, defaults, options);

        if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
            onMobile = true;
            $win.scrollTop(0);
        }

        that.init();

        // onLoad function
        $win.load(function(){
            $('#status').fadeOut();
            $('#preloader').delay(300).fadeOut(200, function() {
                that.activate();
                that.footerHeight();
            });
        }).resize(function(){
            that.footerHeight();
        });

    }

    Plugin.prototype = {
        init: function () {
            this.body = $(document.body);
            this.wrapper = $('.wrapper');

            this.aPopup = $('[data-popup]');
            this.popup = $('.popup');
            this.pclose = $('.pclose');

            this.tooltip = $('.tooltip');

            this.tags = $('.tags');

            this.footer = $('.footer');
            this.fpadding = $('.fpadding');

        },
        activate: function () {
            var instance = this;

            if (instance.tooltip.length > 0) {
                instance.tooltip.tooltipster({
                    position: instance.options.tooltipPosition,
                    contentAsHTML: true,
                    interactive: true
                });
            }

            if (instance.tags.length > 0){
                $(instance.tags).parents('.row').each(function(){
                    var self = $(this),
                        tag = self.find('.tags'),
                        h = 0;

                    tag.each(function(){
                        if ($(this).height() > h){
                            h = $(this).height();
                        }
                    });
                    tag.height(h);

                });
            }

            // [data-popup]
            instance.aPopup.on('click', function(e){
                e.preventDefault();
                var that = $(this),
                    popup = '#'+that.data('popup'),
                    winTop = $win.scrollTop();

                instance.body.append('<div class="overlay"/>');
                $('.overlay').height($doc.height()).fadeIn(instance.options.speedAnimation/2);

                $(popup).css('top', winTop + 100).fadeIn(instance.options.speedAnimation);

            });

            instance.popup.click(function(e){ e.stopPropagation(); });

            instance.pclose.click(function(e){
                e.preventDefault();
                $('.overlay').fadeOut(instance.options.speedAnimation, function(){
                    $(this).remove();
                });

                instance.popup.fadeOut(instance.options.speedAnimation);
            });

            $doc.on('click', '.overlay', function(e){
                e.preventDefault();
                $(this).fadeOut(instance.options.speedAnimation, function(){
                    $(this).remove();
                });

                instance.popup.fadeOut(instance.options.speedAnimation);
            });

        },
        footerHeight: function(){
            var instance = this,
                fh = instance.footer.outerHeight();

            instance.footer.css('marginTop', -fh);
            instance.fpadding.css('paddingBottom', fh);
        }
    };

    $.fn[pluginName] = function (options) {
        return this.each(function () {
            if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" + pluginName,
                    new Plugin(this, options));
            }
        });
    };
})(jQuery, window, document);

$.FormProcessor = {
    init: function(form) {
        var errorsWrapper = form.find('.errors-container');
        errorsWrapper.hide();
    },
    fail: function(form, errors) {
        var errorsWrapper = form.find('.errors-container');
        var errorsContainer = form.find('.errors-container .list');
        errorsContainer.empty();
        $.each(errors.common, function(index, error) {
            errorsContainer.append('<li>' + error + '</li>');
        });
        $.each(errors.fields, function(index, error) {
            errorsContainer.append('<li>' + error + '</li>');
        });
        errorsWrapper.show();
    }
};

(function ($) {
    $(document.body).devacademy();

    $('form[name=dae_security_login]').on('submit', function() {
        $('#login-errors').hide();
        var $form = $(this);
        var data = $form.serialize();

        $.post($form.attr('action'), data, function(response) {
            if (response.success) {
                location.href = response.redirect;
            } else {
                $.each(response.form.errors.fields, function(index, error) {
                    $('#login-errors').text(error[0]).show();
                });
            }
        });

        return false;
    });

    $('.subscribe').on('click', function() {
        var container = $(this).closest('.subscribe-container');

        $.post($(this).data('url'));

        $(this).hide();
        container.find('.unsubscribe').show();

        return false;
    });

    $('.unsubscribe').on('click', function() {
        var container = $(this).closest('.subscribe-container');

        $.post($(this).data('url'));

        $(this).hide();
        container.find('.subscribe').show();

        return false;
    });
})(jQuery);